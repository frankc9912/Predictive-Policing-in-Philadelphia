theme(
plot.title = element_text(size = 10, hjust = 0.5),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(size = 8,hjust = 1),
strip.text = element_text(size = 4),
axis.title = element_text(size = 0),
axis.text = element_text(size = 0),
legend.key.width = unit(0.2, "cm"),
legend.title = element_text(size = 0),
legend.text = element_text(size = 4),
plot.margin = unit(c(0, 0, 0, 0),"cm"),
panel.background = element_rect(fill = "transparent"),
panel.grid = element_line(color = "grey85", size = 0.1),
legend.position = "none")
felony_ppp <- as.ppp(st_coordinates(felony_22), W = st_bbox(final_net))
felony_KD.1000 <- spatstat.explore::density.ppp(felony_ppp, conv_unit(500, "m", "ft"))
felony_KD.1500 <- spatstat.explore::density.ppp(felony_ppp, conv_unit(750, "m", "ft"))
felony_KD.2000 <- spatstat.explore::density.ppp(felony_ppp, conv_unit(1000, "m", "ft"))
felony_KD.df <- rbind(
mutate(data.frame(rasterToPoints(mask(raster(felony_KD.1000), as(neigh, 'Spatial')))), Legend = "500 m"),
mutate(data.frame(rasterToPoints(mask(raster(felony_KD.1500), as(neigh, 'Spatial')))), Legend = "750 m"),
mutate(data.frame(rasterToPoints(mask(raster(felony_KD.2000), as(neigh, 'Spatial')))), Legend = "1000 m"))
felony_KD.df$Legend <- factor(felony_KD.df$Legend, levels = c("500 m", "750 m", "1000 m"))
ggplot(data = felony_KD.df, aes(x=x, y=y)) +
geom_raster(aes(fill=layer)) +
facet_wrap(~Legend) +
coord_sf(crs=st_crs(final_net)) +
scale_fill_viridis(name="Density") +
labs(title = "Kernel density with 3 different search radii") +
map.theme()
felony_KDE_sum <- as.data.frame(felony_KD.1500) %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(final_net)) %>%
aggregate(., final_net, mean)
kde_breaks <- classIntervals(felony_KDE_sum$value,
n = 5, "fisher")
felony_KDE_sf <- felony_KDE_sum %>%
mutate(label = "Kernel Density",
Risk_Category = ntile(value, 100),
Risk_Category = case_when(
Risk_Category >= 80 ~ "80% to 100%",
Risk_Category >= 60 & Risk_Category < 80 ~ "60% to 79%",
Risk_Category >= 40 & Risk_Category < 60 ~ "40% to 59%",
Risk_Category >= 20 & Risk_Category < 40 ~ "20% to 39%",
Risk_Category >= 1 & Risk_Category < 20 ~ "1% to 19%")) %>%
cbind(
aggregate(
dplyr::select(felony_23) %>% mutate(felonyCount = 1), ., sum) %>%
mutate(felonyCount = replace_na(felonyCount, 0))) %>%
dplyr::select(label, Risk_Category, felonyCount)
felony_risk_sf <-
filter(reg.summary, Regression == "Random k-fold CV: Spatial Process") %>%
mutate(label = "Risk Predictions",
Risk_Category = ntile(Prediction, 100),
Risk_Category = case_when(
Risk_Category >= 80 ~ "80% to 100%",
Risk_Category >= 60 & Risk_Category < 80 ~ "60% to 79%",
Risk_Category >= 40 & Risk_Category < 60 ~ "40% to 59%",
Risk_Category >= 20 & Risk_Category < 40 ~ "20% to 39%",
Risk_Category >= 1 & Risk_Category < 20 ~ "1% to 19%")) %>%
cbind(
aggregate(
dplyr::select(felony_23) %>% mutate(felonyCount = 1), ., sum) %>%
mutate(felonyCount = replace_na(felonyCount, 0))) %>%
dplyr::select(label,Risk_Category, felonyCount)
felony_actual_sf <- felony_23 %>%
dplyr::select() %>%
mutate(felonyCount23 = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(felonyCount23 = replace_na(felonyCount23, 0),
label = "Actual Value",
Risk_Category = ntile(felonyCount23, 100),
Risk_Category = case_when(
Risk_Category >= 80 ~ "80% to 100%",
Risk_Category >= 60 & Risk_Category < 80 ~ "60% to 79%",
Risk_Category >= 40 & Risk_Category < 60 ~ "40% to 59%",
Risk_Category >= 20 & Risk_Category < 40 ~ "20% to 39%",
Risk_Category >= 1 & Risk_Category < 20 ~ "1% to 19%")) %>%
mutate(felonyCount = felonyCount23,
geometry = geometry)
felony_actual_sf <- felony_actual_sf[, -c(1, 2)]
rbind(felony_KDE_sf, felony_risk_sf, felony_actual_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(felony_23, 3000), size = .3, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2022 Felony risk predictions; 2023 Felony") +
map.theme()
felony_actual_sf <- felony_23 %>%
dplyr::select() %>%
mutate(felonyCount23 = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(felonyCount23 = replace_na(felonyCount23, 0),
label = "Actual Value",
Risk_Category = ntile(felonyCount23, 100),
Risk_Category = case_when(
Risk_Category >= 80 ~ "80% to 100%",
Risk_Category >= 60 & Risk_Category < 80 ~ "60% to 79%",
Risk_Category >= 40 & Risk_Category < 60 ~ "40% to 59%",
Risk_Category >= 20 & Risk_Category < 40 ~ "20% to 39%",
Risk_Category >= 1 & Risk_Category < 20 ~ "1% to 19%")) %>%
mutate(felonyCount = felonyCount23,
geometry = geometry)
felony_actual_sf <- felony_actual_sf[, -c(1, 2)]
rbind(felony_KDE_sf, felony_risk_sf, felony_actual_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(felony_23, 3000), size = .3, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2022 Felony risk predictions; 2023 Felony") +
map.theme()
felony_actual_sf <- felony_23 %>%
dplyr::select() %>%
mutate(felonyCount23 = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(label = "Actual Value",
Risk_Category = ntile(felonyCount23, 100),
Risk_Category = case_when(
Risk_Category >= 80 ~ "80% to 100%",
Risk_Category >= 60 & Risk_Category < 80 ~ "60% to 79%",
Risk_Category >= 40 & Risk_Category < 60 ~ "40% to 59%",
Risk_Category >= 20 & Risk_Category < 40 ~ "20% to 39%",
Risk_Category >= 1 & Risk_Category < 20 ~ "1% to 19%")) %>%
mutate(felonyCount = felonyCount23,
geometry = geometry,
felonyCount23 = replace_na(felonyCount23, 0))
felony_actual_sf <- felony_actual_sf[, -c(1, 2)]
rbind(felony_KDE_sf, felony_risk_sf, felony_actual_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(felony_23, 3000), size = .3, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2022 Felony risk predictions; 2023 Felony") +
map.theme()
felony_actual_sf <- felony_23 %>%
dplyr::select() %>%
mutate(felonyCount23 = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(label = "Actual Value",
Risk_Category = ntile(felonyCount23, 100),
Risk_Category = case_when(
Risk_Category >= 80 ~ "80% to 100%",
Risk_Category >= 60 & Risk_Category < 80 ~ "60% to 79%",
Risk_Category >= 40 & Risk_Category < 60 ~ "40% to 59%",
Risk_Category >= 20 & Risk_Category < 40 ~ "20% to 39%",
Risk_Category >= 1 & Risk_Category < 20 ~ "1% to 19%")) %>%
mutate(felonyCount23 = replace_na(felonyCount23, 0),
felonyCount = felonyCount23,
geometry = geometry)
felony_actual_sf <- felony_actual_sf[, -c(1, 2)]
rbind(felony_KDE_sf, felony_risk_sf, felony_actual_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(felony_23, 3000), size = .3, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2022 Felony risk predictions; 2023 Felony") +
map.theme()
felony_actual_sf <- felony_23 %>%
dplyr::select() %>%
mutate(felonyCount23 = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(label = "Actual Value",
Risk_Category = ntile(felonyCount23, 100),
Risk_Category = case_when(
Risk_Category >= 80 ~ "80% to 100%",
Risk_Category >= 60 & Risk_Category < 80 ~ "60% to 79%",
Risk_Category >= 40 & Risk_Category < 60 ~ "40% to 59%",
Risk_Category >= 20 & Risk_Category < 40 ~ "20% to 39%",
Risk_Category >= 1 & Risk_Category < 20 ~ "1% to 19%")) %>%
mutate(felonyCount23 = replace_na(felonyCount23, 1),
felonyCount = felonyCount23,
geometry = geometry)
felony_actual_sf <- felony_actual_sf[, -c(1, 2)]
rbind(felony_KDE_sf, felony_risk_sf, felony_actual_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(felony_23, 3000), size = .3, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2022 Felony risk predictions; 2023 Felony") +
map.theme()
felony_actual_sf <- felony_23 %>%
dplyr::select() %>%
mutate(felonyCount23 = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(felonyCount23 = replace_na(felonyCount23, 0),
label = "Actual Value",
Risk_Category = ntile(felonyCount23, 100),
Risk_Category = case_when(
Risk_Category >= 80 ~ "80% to 100%",
Risk_Category >= 60 & Risk_Category < 80 ~ "60% to 79%",
Risk_Category >= 40 & Risk_Category < 60 ~ "40% to 59%",
Risk_Category >= 20 & Risk_Category < 40 ~ "20% to 39%",
Risk_Category >= 0 & Risk_Category < 20 ~ "1% to 19%")) %>%
mutate(felonyCount = felonyCount23,
geometry = geometry)
felony_actual_sf <- felony_actual_sf[, -c(1, 2)]
rbind(felony_KDE_sf, felony_risk_sf, felony_actual_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(felony_23, 3000), size = .3, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2022 Felony risk predictions; 2023 Felony") +
map.theme()
View(felony_actual_sf)
felony_actual_sf <- felony_23 %>%
dplyr::select() %>%
mutate(felonyCount23 = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(felonyCount23 = replace_na(felonyCount23, 0),
label = "Actual Value",
Risk_Category = ifelse(felonyCount23 != 0, ntile(felonyCount23, 100), 0),
Risk_Category = case_when(
Risk_Category >= 80 ~ "80% to 100%",
Risk_Category >= 60 & Risk_Category < 80 ~ "60% to 79%",
Risk_Category >= 40 & Risk_Category < 60 ~ "40% to 59%",
Risk_Category >= 20 & Risk_Category < 40 ~ "20% to 39%",
Risk_Category >= 1 & Risk_Category < 20 ~ "1% to 19%")) %>%
mutate(felonyCount = felonyCount23,
geometry = geometry)
felony_actual_sf <- felony_actual_sf[, -c(1, 2)]
rbind(felony_KDE_sf, felony_risk_sf, felony_actual_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(felony_23, 3000), size = .3, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2022 Felony risk predictions; 2023 Felony") +
map.theme()
felony_actual_sf <- felony_23 %>%
dplyr::select() %>%
mutate(felonyCount23 = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(felonyCount23 = replace_na(felonyCount23, 0),
label = "Actual Value",
Risk_Category = ifelse(felonyCount23 != 0, ntile(felonyCount23, 100), 1),
Risk_Category = case_when(
Risk_Category >= 80 ~ "80% to 100%",
Risk_Category >= 60 & Risk_Category < 80 ~ "60% to 79%",
Risk_Category >= 40 & Risk_Category < 60 ~ "40% to 59%",
Risk_Category >= 20 & Risk_Category < 40 ~ "20% to 39%",
Risk_Category >= 1 & Risk_Category < 20 ~ "1% to 19%")) %>%
mutate(felonyCount = felonyCount23,
geometry = geometry)
felony_actual_sf <- felony_actual_sf[, -c(1, 2)]
rbind(felony_KDE_sf, felony_risk_sf, felony_actual_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(felony_23, 3000), size = .3, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2022 Felony risk predictions; 2023 Felony") +
map.theme()
felony_actual_sf <- felony_23 %>%
dplyr::select() %>%
mutate(felonyCount23 = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(felonyCount23 = replace_na(felonyCount23, 0),
label = "Actual Value",
#Risk_Category = ifelse(felonyCount23 != 0, ntile(felonyCount23, 100), 1),
Risk_Category = ntile(felonyCount23, 100),
Risk_Category = case_when(
Risk_Category >= 80 ~ "80% to 100%",
Risk_Category >= 60 & Risk_Category < 80 ~ "60% to 79%",
Risk_Category >= 40 & Risk_Category < 60 ~ "40% to 59%",
Risk_Category >= 20 & Risk_Category < 40 ~ "20% to 39%",
Risk_Category >= 1 & Risk_Category < 20 ~ "1% to 19%")) %>%
mutate(felonyCount = felonyCount23,
geometry = geometry)
felony_actual_sf <- felony_actual_sf[, -c(1, 2)]
rbind(felony_KDE_sf, felony_risk_sf, felony_actual_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(felony_23, 3000), size = .3, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2022 Felony risk predictions; 2023 Felony") +
map.theme()
felony_actual_sf <- felony_23 %>%
dplyr::select() %>%
mutate(felonyCount23 = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(felonyCount23 = replace_na(felonyCount23, 0),
label = "Actual Value",
Risk_Category = ifelse(felonyCount23 != 0, ntile(felonyCount23, 100), 1),
Risk_Category = case_when(
Risk_Category >= 80 ~ "80% to 100%",
Risk_Category >= 60 & Risk_Category < 80 ~ "60% to 79%",
Risk_Category >= 40 & Risk_Category < 60 ~ "40% to 59%",
Risk_Category >= 20 & Risk_Category < 40 ~ "20% to 39%",
Risk_Category >= 1 & Risk_Category < 20 ~ "1% to 19%")) %>%
mutate(felonyCount = felonyCount23,
geometry = geometry)
felony_actual_sf <- felony_actual_sf[, -c(1, 2)]
rbind(felony_KDE_sf, felony_risk_sf, felony_actual_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(felony_23, 3000), size = .3, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2022 Felony risk predictions; 2023 Felony") +
map.theme()
phl_mhhinc <-
get_acs(geography = "county", variables = "B19013_001",
year = 2022, state = "PA", county = "Philadelphia") %>%
dplyr::select(MedInc = estimate) %>%
pull() %>%
.[1]
tracts_22 <-
get_acs(geography = "tract", variables = c("B01003_001", "B01001A_001E", "B19013_001"),
year = 2022, state = "PA", county = "Philadelphia", geometry = T) %>%
st_transform(crs = phl_crs)  %>%
dplyr::select(variable, estimate, GEOID) %>%
spread(variable, estimate) %>%
rename(TotalPop = B01003_001,
NumberWhites = B01001A_001,
MedInc = B19013_001) %>%
mutate(percentWhite = NumberWhites / TotalPop,
percentInc = MedInc / phl_mhhinc,
Race_Context = ifelse(percentWhite > .5, "Majority_White", "Majority_Non_White"),
Income_Context = case_when(
percentInc <= .5 ~ "Low_Income",
percentInc > .5 & percentInc <= 1.5 ~ "Moderate_Income",
percentInc > 1.5 ~ "High_Income")) %>%
.[neigh,]
tracts_22_map <-
tracts_22 %>%
dplyr::select(-TotalPop, -NumberWhites, -MedInc, -percentWhite, -percentInc) %>%
st_drop_geometry() %>%
gather(category, value, -GEOID) %>%
left_join(tracts_22) %>%
st_as_sf()
ggplot() +
geom_sf(data = tracts_22_map, aes(fill = value)) +
scale_fill_discrete_sequential(palette = "Sunset") +
facet_wrap(~category) +
labs(title =  "Racial and Income Contexts in Philadelphia") +
map.theme()
tracts_22_map <-
tracts_22 %>%
dplyr::select(-TotalPop, -NumberWhites, -MedInc, -percentWhite, -percentInc) %>%
st_drop_geometry() %>%
gather(category, value, -GEOID) %>%
left_join(tracts_22) %>%
st_as_sf()
View(tracts_22_map)
View(tracts_22)
tracts_22_race <-
tracts_22 %>%
dplyr::select(-TotalPop, -NumberWhites, -MedInc, -percentWhite, -percentInc, -Income_Context) %>%
st_drop_geometry() %>%
gather(category, value, -GEOID) %>%
left_join(tracts_22) %>%
st_as_sf()
ggplot() +
geom_sf(data = tracts_22_map, aes(fill = value)) +
scale_fill_discrete_sequential(palette = "Sunset") +
labs(title =  "Racial Contexts in Philadelphia") +
map.theme()
ggplot() +
geom_sf(data = tracts_22_race, aes(fill = value)) +
scale_fill_discrete_sequential(palette = "Sunset") +
labs(title =  "Racial Contexts in Philadelphia") +
map.theme()
tracts_22_inc <-
tracts_22 %>%
dplyr::select(-TotalPop, -NumberWhites, -MedInc, -percentWhite, -percentInc, -Race_Context) %>%
st_drop_geometry() %>%
gather(category, value, -GEOID) %>%
left_join(tracts_22) %>%
st_as_sf()
ggplot() +
geom_sf(data = tracts_22_inc, aes(fill = value)) +
scale_fill_discrete_sequential(palette = "Sunset") +
labs(title =  "Racial Contexts in Philadelphia") +
map.theme()
ggplot() +
geom_sf(data = tracts_22_inc, aes(fill = value)) +
scale_fill_discrete_sequential(palette = "Terrain") +
labs(title =  "Income Contexts in Philadelphia") +
map.theme()
ggplot() +
geom_sf(data = tracts_22_inc, aes(fill = value)) +
scale_fill_discrete_sequential(palette = "RedBl") +
labs(title =  "Income Contexts in Philadelphia") +
map.theme()
ggplot() +
geom_sf(data = tracts_22_inc, aes(fill = value)) +
scale_fill_discrete_sequential(palette = "Red") +
labs(title =  "Income Contexts in Philadelphia") +
map.theme()
ggplot() +
geom_sf(data = tracts_22_inc, aes(fill = value)) +
scale_fill_discrete_sequential(palette = "Blue-Red") +
labs(title =  "Income Contexts in Philadelphia") +
map.theme()
ggplot() +
geom_sf(data = tracts_22_inc, aes(fill = value)) +
scale_fill_discrete_diverging(palette = "Blue-Red") +
labs(title =  "Income Contexts in Philadelphia") +
map.theme()
ggplot() +
geom_sf(data = tracts_22_inc, aes(fill = value)) +
scale_fill_discrete_sequential(palette = "OrRd") +
labs(title =  "Income Contexts in Philadelphia") +
map.theme()
View(tracts_22_inc)
tracts_22_inc <-
tracts_22 %>%
dplyr::select(-TotalPop, -NumberWhites, -MedInc, -percentWhite, -percentInc, -Race_Context) %>%
st_drop_geometry() %>%
gather(category, value, -GEOID) %>%
left_join(tracts_22) %>%
st_as_sf()
ggplot() +
geom_sf(data = tracts_22_inc, aes(fill = value)) +
scale_fill_discrete_qualitative(palette = "Cold") +
labs(title =  "Income Contexts in Philadelphia") +
map.theme()
ggplot() +
geom_sf(data = tracts_22_inc, aes(fill = value)) +
scale_fill_discrete_qualitative(palette = "Set 2") +
labs(title =  "Income Contexts in Philadelphia") +
map.theme()
ggplot() +
geom_sf(data = tracts_22_inc, aes(fill = value)) +
scale_fill_discrete_qualitative(palette = "Set 3") +
labs(title =  "Income Contexts in Philadelphia") +
map.theme()
ggplot() +
geom_sf(data = tracts_22_inc, aes(fill = value)) +
scale_fill_discrete_qualitative(palette = rev("Set 3")) +
labs(title =  "Income Contexts in Philadelphia") +
map.theme()
ggplot() +
geom_sf(data = tracts_22_inc, aes(fill = value)) +
scale_fill_discrete_qualitative(palette = "Set 3", trans = "reverse") +
labs(title =  "Income Contexts in Philadelphia") +
map.theme()
ggplot() +
geom_sf(data = tracts_22_inc, aes(fill = value)) +
scale_fill_discrete_qualitative(palette = "Set 3", trans = "reverse") +
labs(title =  "Income Contexts in Philadelphia") +
map.theme()
ggplot() +
geom_sf(data = tracts_22_inc, aes(fill = value)) +
scale_fill_discrete_qualitative(palette = "Dark 3") +
labs(title =  "Income Contexts in Philadelphia") +
map.theme()
ggplot() +
geom_sf(data = tracts_22_inc, aes(fill = value)) +
scale_fill_discrete_sequential(palette = "Purple-Yellow") +
labs(title =  "Income Contexts in Philadelphia") +
map.theme()
reg.summary_race <- reg.summary %>%
st_centroid() %>%
st_join(tracts_22) %>%
na.omit() %>%
st_drop_geometry() %>%
group_by(Regression, Race_Context) %>%
summarize(mean.Error = mean(Error, na.rm = T)) %>%
spread(Race_Context, mean.Error)
reg.summary_inc <- reg.summary %>%
st_centroid() %>%
st_join(tracts_22) %>%
na.omit() %>%
st_drop_geometry() %>%
group_by(Regression, Income_Context) %>%
summarize(mean.Error = mean(Error, na.rm = T)) %>%
spread(Income_Context, mean.Error)
kbl(format = 'html', escape = FALSE, reg.summary_race, caption = "Mean Error by Neighborhood Racial Context") %>%
kable_styling(font_size = 10, full_width = F) %>%
gsub("font-size: initial !important;",
"font-size: 10pt !important;", .)
kbl(format = 'html', escape = FALSE, reg.summary_inc, caption = "Mean Error by Neighborhood Income Context") %>%
kable_styling(font_size = 10, full_width = F) %>%
gsub("font-size: initial !important;",
"font-size: 10pt !important;", .)
