reg.ss.cv <- crossValidate(
dataset = final_net,
id = "cvID",
dependentVariable = "count_felony",
indVariables = reg.ss.vars) %>%
dplyr::select(cvID = cvID, count_felony, Prediction, geometry)
reg.spatialCV <- crossValidate(
dataset = final_net,
id = "name",
dependentVariable = "count_felony",
indVariables = reg.vars) %>%
dplyr::select(cvID = name, count_felony, Prediction, geometry)
reg.ss.spatialCV <- crossValidate(
dataset = final_net,
id = "name",
dependentVariable = "count_felony",
indVariables = reg.ss.vars) %>%
dplyr::select(cvID = name, count_felony, Prediction, geometry)
reg.spatialCV2 <- crossValidate(
dataset = final_net,
id = "District",
dependentVariable = "count_felony",
indVariables = reg.vars) %>%
dplyr::select(cvID = District, count_felony, Prediction, geometry)
reg.ss.spatialCV2 <- crossValidate(
dataset = final_net,
id = "District",
dependentVariable = "count_felony",
indVariables = reg.ss.vars) %>%
dplyr::select(cvID = District, count_felony, Prediction, geometry)
reg.summary <-
rbind(
mutate(reg.cv,           Error = Prediction - count_felony,
PE = (Prediction - count_felony)/count_felony,
Regression = "Random k-fold CV: Just Risk Factors"),
mutate(reg.ss.cv,        Error = Prediction - count_felony,
PE = (Prediction - count_felony)/count_felony,
Regression = "Random k-fold CV: Spatial Process"),
mutate(reg.spatialCV,    Error = Prediction - count_felony,
PE = (Prediction - count_felony)/count_felony,
Regression = "Spatial LOGO-CV by neighborhoods: Just Risk Factors"),
mutate(reg.ss.spatialCV, Error = Prediction - count_felony,
PE = (Prediction - count_felony)/count_felony,
Regression = "Spatial LOGO-CV by neighborhoods: Spatial Process"),
mutate(reg.spatialCV2, Error = Prediction - count_felony,
PE = (Prediction - count_felony)/count_felony,
Regression = "Spatial LOGO-CV by police districts: Just Risk Factors"),
mutate(reg.ss.spatialCV2, Error = Prediction - count_felony,
PE = (Prediction - count_felony)/count_felony,
Regression = "Spatial LOGO-CV by police districts: Spatial Process")) %>%
st_sf()
reg.summary <- transform(reg.summary, Regression = factor(Regression, levels=c("Random k-fold CV: Just Risk Factors", "Random k-fold CV: Spatial Process", "Spatial LOGO-CV by neighborhoods: Just Risk Factors", "Spatial LOGO-CV by neighborhoods: Spatial Process", "Spatial LOGO-CV by police districts: Just Risk Factors", "Spatial LOGO-CV by police districts: Spatial Process")))
error_by_reg_and_fold <-
reg.summary %>%
group_by(Regression, cvID) %>%
summarize(MAE = mean(abs(Error), na.rm = T),
SD_MAE = mean(sd(abs(Error)), na.rm = T)) %>%
ungroup()
error_by_reg_and_fold2 <-
reg.summary %>%
group_by(Regression, cvID) %>%
dplyr::filter(!is.infinite(PE)) %>%
summarize(MAPE = mean(abs(PE), na.rm = T),
SD_MAPE = mean(sd(abs(PE)), na.rm = T)) %>%
ungroup()
error_by_reg_and_fold %>%
ggplot(aes(MAE)) +
geom_histogram(bins = 30, colour="black", fill = "#f78d8d", lwd = 0.5) +
facet_wrap(~Regression, ncol = 2) +
geom_vline(xintercept = 0) + scale_x_continuous(breaks = seq(0, 8, by = 1)) +
labs(title="Distribution of MAE", subtitle = "k-fold cross validation vs. LOGO-CV",
x="Mean Absolute Error", y="Count") +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
plot.subtitle = element_text(size = 8),
plot.caption = element_text(size = 8,hjust = 1),
strip.text = element_text(size = 6),
axis.title = element_text(size = 0),
axis.text = element_text(size = 6),
legend.key.height = unit(0.2, "cm"),
legend.title = element_text(size = 0),
legend.text = element_text(size = 6),
plot.margin = unit(c(0, 0, 0, 0),"cm"),
panel.background = element_rect(fill = "transparent"),
panel.grid = element_line(color = "grey85", size = 0.1),
legend.position = "none")
fishnet <-
st_make_grid(phl_boundary,
cellsize = conv_unit(250, "m", "ft"),
square = TRUE) %>%
.[phl_boundary] %>%            # fast way to select intersecting polygons
st_sf() %>%
mutate(uniqueID = 1:n())
crime_net <-
dplyr::select(felony_22) %>%
mutate(count_felony = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(count_felony = replace_na(count_felony, 0),
uniqueID = 1:n(),
cvID = sample(round(nrow(fishnet) / 24),
size=nrow(fishnet), replace = TRUE))
ggplot() +
geom_sf(data = crime_net, aes(fill = count_felony), color = NA) +
scale_fill_viridis() +
labs(title = "Count of felony for the fishnet") +
map.theme()
ggplot(final_net, aes(count_felony)) +
geom_histogram(binwidth = 1) +
geom_vline(aes(xintercept = mean(count_felony)),
color = "orange", size = 0.7) +
labs(title = "Distribution of Felony by Grid Cell") +
plot.theme() +
theme(plot.title = element_text(size = 10))
error_by_reg_and_fold3 <-
left_join(st_drop_geometry(error_by_reg_and_fold), st_drop_geometry(error_by_reg_and_fold2))
e.summary <- error_by_reg_and_fold3 %>%
group_by(Regression) %>%
summarize(Mean_MAE = round(mean(MAE), 2),
SD_MAE = round(sd(MAE), 2))
kbl(format = 'html', escape = FALSE, e.summary, caption = "Mean Absolute Errors Across Different Models") %>%
kable_styling(font_size = 10, full_width = F) %>%
gsub("font-size: initial !important;",
"font-size: 10pt !important;", .)
reg.summary <- transform(reg.summary, Regression = factor(Regression, levels=c("Random k-fold CV: Just Risk Factors", "Random k-fold CV: Spatial Process", "Spatial LOGO-CV by neighborhoods: Just Risk Factors", "Spatial LOGO-CV by neighborhoods: Spatial Process", "Spatial LOGO-CV by police districts: Just Risk Factors", "Spatial LOGO-CV by police districts: Spatial Process")))
error_by_reg_and_fold <-
reg.summary %>%
group_by(Regression, cvID) %>%
summarize(MAE = mean(abs(Error), na.rm = T),
SD_MAE = mean(sd(abs(Error)), na.rm = T)) %>%
ungroup()
error_by_reg_and_fold2 <-
reg.summary %>%
group_by(Regression, cvID) %>%
dplyr::filter(!is.infinite(PE)) %>%
summarize(MAPE = mean(abs(PE), na.rm = T),
SD_MAPE = mean(sd(abs(PE)), na.rm = T)) %>%
ungroup()
error_by_reg_and_fold %>%
ggplot(aes(MAE)) +
geom_histogram(bins = 30, colour="black", fill = "#f78d8d", lwd = 0.5) +
facet_wrap(~Regression, ncol = 2) +
geom_vline(xintercept = 0) + scale_x_continuous(breaks = seq(0, 8, by = 1)) +
labs(title="Distribution of MAE", subtitle = "k-fold cross validation vs. LOGO-CV",
x="Mean Absolute Error", y="Count") +
theme(
plot.title = element_text(size = 10, hjust = 0.5),
plot.subtitle = element_text(size = 8),
plot.caption = element_text(size = 8,hjust = 1),
strip.text = element_text(size = 6),
axis.title = element_text(size = 0),
axis.text = element_text(size = 6),
legend.key.height = unit(0.2, "cm"),
legend.title = element_text(size = 0),
legend.text = element_text(size = 6),
plot.margin = unit(c(0, 0, 0, 0),"cm"),
panel.background = element_rect(fill = "transparent"),
panel.grid = element_line(color = "grey85", size = 0.1),
legend.position = "none")
error_by_reg_and_fold3 <-
left_join(st_drop_geometry(error_by_reg_and_fold), st_drop_geometry(error_by_reg_and_fold2))
e.summary <- error_by_reg_and_fold3 %>%
group_by(Regression) %>%
summarize(Mean_MAE = round(mean(MAE), 2),
SD_MAE = round(sd(MAE), 2))
kbl(format = 'html', escape = FALSE, e.summary, caption = "Mean Absolute Errors Across Different Models") %>%
kable_styling(font_size = 10, full_width = F) %>%
gsub("font-size: initial !important;",
"font-size: 10pt !important;", .)
phl_mhhinc <-
get_acs(geography = "county", variables = "B19013_001",
year = 2022, state = "PA", county = "Philadelphia") %>%
dplyr::select(MedInc = estimate) %>%
pull() %>%
.[1]
tracts_22 <-
get_acs(geography = "tract", variables = c("B01003_001", "B01001A_001E", "B19013_001"),
year = 2022, state = "PA", county = "Philadelphia", geometry = T) %>%
st_transform(crs = phl_crs)  %>%
dplyr::select(variable, estimate, GEOID) %>%
spread(variable, estimate) %>%
rename(TotalPop = B01003_001,
NumberWhites = B01001A_001,
MedInc = B19013_001) %>%
mutate(percentWhite = NumberWhites / TotalPop,
percentInc = MedInc / phl_mhhinc,
Race_Context = ifelse(percentWhite > .5, "Majority_White", "Majority_Non_White"),
Income_Context = case_when(
percentInc <= .5 ~ "Low_Income",
percentInc > .5 & percentInc <= 1.5 ~ "Moderate_Income",
percentInc > 1.5 ~ "High_Income")) %>%
.[neigh,]
tracts_22_map <-
tracts_22 %>%
dplyr::select(-TotalPop, -NumberWhites, -MedInc, -percentWhite, -percentInc) %>%
st_drop_geometry() %>%
gather(category, value, -GEOID) %>%
left_join(tracts_22) %>%
st_as_sf()
ggplot() +
geom_sf(data = tracts_22_map, aes(fill = value)) +
scale_fill_discrete_sequential(palette = "Sunset") +
facet_wrap(~category) +
labs(title =  "Racial and Income Contexts in Philadelphia") +
map.theme()
reg.summary_race <- reg.summary %>%
st_centroid() %>%
st_join(tracts_22) %>%
na.omit() %>%
st_drop_geometry() %>%
group_by(Regression, Race_Context) %>%
summarize(mean.Error = mean(Error, na.rm = T)) %>%
spread(Race_Context, mean.Error)
reg.summary_inc <- reg.summary %>%
st_centroid() %>%
st_join(tracts_22) %>%
na.omit() %>%
st_drop_geometry() %>%
group_by(Regression, Income_Context) %>%
summarize(mean.Error = mean(Error, na.rm = T)) %>%
spread(Income_Context, mean.Error)
kbl(format = 'html', escape = FALSE, reg.summary_race, caption = "Mean Error by Neighborhood Racial Context") %>%
kable_styling(font_size = 10, full_width = F) %>%
gsub("font-size: initial !important;",
"font-size: 10pt !important;", .)
kbl(format = 'html', escape = FALSE, reg.summary_inc, caption = "Mean Error by Neighborhood Income Context") %>%
kable_styling(font_size = 10, full_width = F) %>%
gsub("font-size: initial !important;",
"font-size: 10pt !important;", .)
felony_ppp <- as.ppp(st_coordinates(felony_22), W = st_bbox(final_net))
felony_KD.1000 <- spatstat.explore::density.ppp(felony_ppp, 1000)
felony_KDE_sum <- as.data.frame(felony_KD.1000) %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(final_net)) %>%
aggregate(., final_net, mean)
kde_breaks <- classIntervals(felony_KDE_sum$value,
n = 10, "fisher")
felony_KDE_sf <- felony_KDE_sum %>%
mutate(label = "Kernel Density",
Risk_Category = ntile(value, 100),
Risk_Category = case_when(
Risk_Category >= 90 ~ "90% to 100%",
Risk_Category >= 80 & Risk_Category <= 89 ~ "80% to 89%",
Risk_Category >= 70 & Risk_Category <= 79 ~ "70% to 79%",
Risk_Category >= 60 & Risk_Category <= 69 ~ "60% to 69%",
Risk_Category >= 50 & Risk_Category <= 59 ~ "50% to 59%",
Risk_Category >= 40 & Risk_Category <= 49 ~ "40% to 49%",
Risk_Category >= 30 & Risk_Category <= 39 ~ "30% to 39%",
Risk_Category >= 20 & Risk_Category <= 29 ~ "20% to 29%",
Risk_Category >= 10 & Risk_Category <= 19 ~ "10% to 19%",
Risk_Category >= 1 & Risk_Category <= 9 ~ "1% to 9%")) %>%
cbind(
aggregate(
dplyr::select(felony_23) %>% mutate(felonyCount = 1), ., sum) %>%
mutate(felonyCount = replace_na(felonyCount, 0))) %>%
dplyr::select(label, Risk_Category, felonyCount)
felony_risk_sf <-
filter(reg.summary, Regression == "Random k-fold CV: Spatial Process") %>%
mutate(label = "Risk Predictions",
Risk_Category = ntile(Prediction, 100),
Risk_Category = case_when(
Risk_Category >= 90 ~ "90% to 100%",
Risk_Category >= 80 & Risk_Category <= 89 ~ "80% to 89%",
Risk_Category >= 70 & Risk_Category <= 79 ~ "70% to 79%",
Risk_Category >= 60 & Risk_Category <= 69 ~ "60% to 69%",
Risk_Category >= 50 & Risk_Category <= 59 ~ "50% to 59%",
Risk_Category >= 40 & Risk_Category <= 49 ~ "40% to 49%",
Risk_Category >= 30 & Risk_Category <= 39 ~ "30% to 39%",
Risk_Category >= 20 & Risk_Category <= 29 ~ "20% to 29%",
Risk_Category >= 10 & Risk_Category <= 19 ~ "10% to 19%",
Risk_Category >= 1 & Risk_Category <= 9 ~ "1% to 9%")) %>%
cbind(
aggregate(
dplyr::select(felony_23) %>% mutate(felonyCount = 1), ., sum) %>%
mutate(felonyCount = replace_na(felonyCount, 0))) %>%
dplyr::select(label,Risk_Category, felonyCount)
felony_actual_sf <- felony_23 %>%
dplyr::select() %>%
mutate(felonyCount23 = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(felonyCount23 = replace_na(felonyCount23, 0),
label = "Actual Value",
Risk_Category = ntile(felonyCount23, 100),
Risk_Category = case_when(
Risk_Category >= 90 ~ "90% to 100%",
Risk_Category >= 80 & Risk_Category <= 89 ~ "80% to 89%",
Risk_Category >= 70 & Risk_Category <= 79 ~ "70% to 79%",
Risk_Category >= 60 & Risk_Category <= 69 ~ "60% to 69%",
Risk_Category >= 50 & Risk_Category <= 59 ~ "50% to 59%",
Risk_Category >= 40 & Risk_Category <= 49 ~ "40% to 49%",
Risk_Category >= 30 & Risk_Category <= 39 ~ "30% to 39%",
Risk_Category >= 20 & Risk_Category <= 29 ~ "20% to 29%",
Risk_Category >= 10 & Risk_Category <= 19 ~ "10% to 19%",
Risk_Category >= 1 & Risk_Category <= 9 ~ "1% to 9%")) %>%
mutate(felonyCount = felonyCount23,
geometry = geometry)
felony_actual_sf <- felony_actual_sf[, -c(1, 2)]
rbind(felony_KDE_sf, felony_risk_sf, felony_actual_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(felony_23, 3000), size = .3, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2022 Felony risk predictions; 2023 Felony") +
map.theme()
felony_ppp <- as.ppp(st_coordinates(felony_23), W = st_bbox(final_net))
felony_KD.1000 <- spatstat.explore::density.ppp(felony_ppp, 1000)
felony_KDE_sum <- as.data.frame(felony_KD.1000) %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(final_net)) %>%
aggregate(., final_net, mean)
kde_breaks <- classIntervals(felony_KDE_sum$value,
n = 10, "fisher")
felony_KDE_sf <- felony_KDE_sum %>%
mutate(label = "Kernel Density",
Risk_Category = ntile(value, 100),
Risk_Category = case_when(
Risk_Category >= 90 ~ "90% to 100%",
Risk_Category >= 80 & Risk_Category <= 89 ~ "80% to 89%",
Risk_Category >= 70 & Risk_Category <= 79 ~ "70% to 79%",
Risk_Category >= 60 & Risk_Category <= 69 ~ "60% to 69%",
Risk_Category >= 50 & Risk_Category <= 59 ~ "50% to 59%",
Risk_Category >= 40 & Risk_Category <= 49 ~ "40% to 49%",
Risk_Category >= 30 & Risk_Category <= 39 ~ "30% to 39%",
Risk_Category >= 20 & Risk_Category <= 29 ~ "20% to 29%",
Risk_Category >= 10 & Risk_Category <= 19 ~ "10% to 19%",
Risk_Category >= 1 & Risk_Category <= 9 ~ "1% to 9%")) %>%
cbind(
aggregate(
dplyr::select(felony_23) %>% mutate(felonyCount = 1), ., sum) %>%
mutate(felonyCount = replace_na(felonyCount, 0))) %>%
dplyr::select(label, Risk_Category, felonyCount)
felony_risk_sf <-
filter(reg.summary, Regression == "Random k-fold CV: Spatial Process") %>%
mutate(label = "Risk Predictions",
Risk_Category = ntile(Prediction, 100),
Risk_Category = case_when(
Risk_Category >= 90 ~ "90% to 100%",
Risk_Category >= 80 & Risk_Category <= 89 ~ "80% to 89%",
Risk_Category >= 70 & Risk_Category <= 79 ~ "70% to 79%",
Risk_Category >= 60 & Risk_Category <= 69 ~ "60% to 69%",
Risk_Category >= 50 & Risk_Category <= 59 ~ "50% to 59%",
Risk_Category >= 40 & Risk_Category <= 49 ~ "40% to 49%",
Risk_Category >= 30 & Risk_Category <= 39 ~ "30% to 39%",
Risk_Category >= 20 & Risk_Category <= 29 ~ "20% to 29%",
Risk_Category >= 10 & Risk_Category <= 19 ~ "10% to 19%",
Risk_Category >= 1 & Risk_Category <= 9 ~ "1% to 9%")) %>%
cbind(
aggregate(
dplyr::select(felony_23) %>% mutate(felonyCount = 1), ., sum) %>%
mutate(felonyCount = replace_na(felonyCount, 0))) %>%
dplyr::select(label,Risk_Category, felonyCount)
felony_actual_sf <- felony_23 %>%
dplyr::select() %>%
mutate(felonyCount23 = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(felonyCount23 = replace_na(felonyCount23, 0),
label = "Actual Value",
Risk_Category = ntile(felonyCount23, 100),
Risk_Category = case_when(
Risk_Category >= 90 ~ "90% to 100%",
Risk_Category >= 80 & Risk_Category <= 89 ~ "80% to 89%",
Risk_Category >= 70 & Risk_Category <= 79 ~ "70% to 79%",
Risk_Category >= 60 & Risk_Category <= 69 ~ "60% to 69%",
Risk_Category >= 50 & Risk_Category <= 59 ~ "50% to 59%",
Risk_Category >= 40 & Risk_Category <= 49 ~ "40% to 49%",
Risk_Category >= 30 & Risk_Category <= 39 ~ "30% to 39%",
Risk_Category >= 20 & Risk_Category <= 29 ~ "20% to 29%",
Risk_Category >= 10 & Risk_Category <= 19 ~ "10% to 19%",
Risk_Category >= 1 & Risk_Category <= 9 ~ "1% to 9%")) %>%
mutate(felonyCount = felonyCount23,
geometry = geometry)
felony_actual_sf <- felony_actual_sf[, -c(1, 2)]
rbind(felony_KDE_sf, felony_risk_sf, felony_actual_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(felony_23, 3000), size = .3, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2022 Felony risk predictions; 2023 Felony") +
map.theme()
rbind(felony_KDE_sf, felony_risk_sf, felony_actual_sf) %>%
st_drop_geometry() %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category) %>%
group_by(label, Risk_Category) %>%
summarize(countFelony = sum(Value)) %>%
ungroup() %>%
group_by(label) %>%
mutate(Pcnt_of_test_set_crimes = countFelony / sum(countFelony)) %>%
ggplot(aes(Risk_Category,Pcnt_of_test_set_crimes)) +
geom_bar(aes(fill=label), position="dodge", stat="identity") +
scale_fill_viridis(discrete = TRUE, name = "Model") +
labs(title = "Risk prediction vs. Kernel density, 2023 Felony",
y = "% of Test Set Felony (per model)",
x = "Risk Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
felony_ppp <- as.ppp(st_coordinates(felony_23), W = st_bbox(final_net))
felony_KD.1000 <- spatstat.explore::density.ppp(felony_ppp, 1500)
felony_KDE_sum <- as.data.frame(felony_KD.1000) %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(final_net)) %>%
aggregate(., final_net, mean)
kde_breaks <- classIntervals(felony_KDE_sum$value,
n = 10, "fisher")
felony_KDE_sf <- felony_KDE_sum %>%
mutate(label = "Kernel Density",
Risk_Category = ntile(value, 100),
Risk_Category = case_when(
Risk_Category >= 90 ~ "90% to 100%",
Risk_Category >= 80 & Risk_Category <= 89 ~ "80% to 89%",
Risk_Category >= 70 & Risk_Category <= 79 ~ "70% to 79%",
Risk_Category >= 60 & Risk_Category <= 69 ~ "60% to 69%",
Risk_Category >= 50 & Risk_Category <= 59 ~ "50% to 59%",
Risk_Category >= 40 & Risk_Category <= 49 ~ "40% to 49%",
Risk_Category >= 30 & Risk_Category <= 39 ~ "30% to 39%",
Risk_Category >= 20 & Risk_Category <= 29 ~ "20% to 29%",
Risk_Category >= 10 & Risk_Category <= 19 ~ "10% to 19%",
Risk_Category >= 1 & Risk_Category <= 9 ~ "1% to 9%")) %>%
cbind(
aggregate(
dplyr::select(felony_23) %>% mutate(felonyCount = 1), ., sum) %>%
mutate(felonyCount = replace_na(felonyCount, 0))) %>%
dplyr::select(label, Risk_Category, felonyCount)
felony_risk_sf <-
filter(reg.summary, Regression == "Random k-fold CV: Spatial Process") %>%
mutate(label = "Risk Predictions",
Risk_Category = ntile(Prediction, 100),
Risk_Category = case_when(
Risk_Category >= 90 ~ "90% to 100%",
Risk_Category >= 80 & Risk_Category <= 89 ~ "80% to 89%",
Risk_Category >= 70 & Risk_Category <= 79 ~ "70% to 79%",
Risk_Category >= 60 & Risk_Category <= 69 ~ "60% to 69%",
Risk_Category >= 50 & Risk_Category <= 59 ~ "50% to 59%",
Risk_Category >= 40 & Risk_Category <= 49 ~ "40% to 49%",
Risk_Category >= 30 & Risk_Category <= 39 ~ "30% to 39%",
Risk_Category >= 20 & Risk_Category <= 29 ~ "20% to 29%",
Risk_Category >= 10 & Risk_Category <= 19 ~ "10% to 19%",
Risk_Category >= 1 & Risk_Category <= 9 ~ "1% to 9%")) %>%
cbind(
aggregate(
dplyr::select(felony_23) %>% mutate(felonyCount = 1), ., sum) %>%
mutate(felonyCount = replace_na(felonyCount, 0))) %>%
dplyr::select(label,Risk_Category, felonyCount)
felony_actual_sf <- felony_23 %>%
dplyr::select() %>%
mutate(felonyCount23 = 1) %>%
aggregate(., fishnet, sum) %>%
mutate(felonyCount23 = replace_na(felonyCount23, 0),
label = "Actual Value",
Risk_Category = ntile(felonyCount23, 100),
Risk_Category = case_when(
Risk_Category >= 90 ~ "90% to 100%",
Risk_Category >= 80 & Risk_Category <= 89 ~ "80% to 89%",
Risk_Category >= 70 & Risk_Category <= 79 ~ "70% to 79%",
Risk_Category >= 60 & Risk_Category <= 69 ~ "60% to 69%",
Risk_Category >= 50 & Risk_Category <= 59 ~ "50% to 59%",
Risk_Category >= 40 & Risk_Category <= 49 ~ "40% to 49%",
Risk_Category >= 30 & Risk_Category <= 39 ~ "30% to 39%",
Risk_Category >= 20 & Risk_Category <= 29 ~ "20% to 29%",
Risk_Category >= 10 & Risk_Category <= 19 ~ "10% to 19%",
Risk_Category >= 1 & Risk_Category <= 9 ~ "1% to 9%")) %>%
mutate(felonyCount = felonyCount23,
geometry = geometry)
felony_actual_sf <- felony_actual_sf[, -c(1, 2)]
rbind(felony_KDE_sf, felony_risk_sf, felony_actual_sf) %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category, -geometry) %>%
ggplot() +
geom_sf(aes(fill = Risk_Category), colour = NA) +
geom_sf(data = sample_n(felony_23, 3000), size = .3, colour = "black") +
facet_wrap(~label, ) +
scale_fill_viridis(discrete = TRUE) +
labs(title="Comparison of Kernel Density and Risk Predictions",
subtitle="2022 Felony risk predictions; 2023 Felony") +
map.theme()
rbind(felony_KDE_sf, felony_risk_sf, felony_actual_sf) %>%
st_drop_geometry() %>%
na.omit() %>%
gather(Variable, Value, -label, -Risk_Category) %>%
group_by(label, Risk_Category) %>%
summarize(countFelony = sum(Value)) %>%
ungroup() %>%
group_by(label) %>%
mutate(Pcnt_of_test_set_crimes = countFelony / sum(countFelony)) %>%
ggplot(aes(Risk_Category,Pcnt_of_test_set_crimes)) +
geom_bar(aes(fill=label), position="dodge", stat="identity") +
scale_fill_viridis(discrete = TRUE, name = "Model") +
labs(title = "Risk prediction vs. Kernel density, 2023 Felony",
y = "% of Test Set Felony (per model)",
x = "Risk Category") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, vjust = 0.5))
felony_KDE_sum <- as.data.frame(felony_KD.1000) %>%
st_as_sf(coords = c("x", "y"), crs = st_crs(final_net)) %>%
aggregate(., final_net, mean)
View(felony_KDE_sum)
View(error_by_reg_and_fold)
View(error_by_reg_and_fold2)
error_by_reg_and_fold3 <-
left_join(st_drop_geometry(error_by_reg_and_fold), st_drop_geometry(error_by_reg_and_fold2))
e.summary <- error_by_reg_and_fold3 %>%
group_by(Regression) %>%
summarize(Mean_MAE = round(mean(MAE), 2),
SD_MAE = round(sd(MAE), 2))
kbl(format = 'html', escape = FALSE, e.summary, caption = "Mean Absolute Errors Across Different Models") %>%
kable_styling(font_size = 10, full_width = F) %>%
gsub("font-size: initial !important;",
"font-size: 10pt !important;", .)
